name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      CODE: ${{ secrets.CODE }}
      EXPIRES_IN: ${{ secrets.EXPIRES_IN }}
      REDIRECT_URI: ${{ secrets.REDIRECT_URI }}
      REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
      SCOPE: ${{ secrets.SCOPE }}
      SELLER_ID: ${{ secrets.SELLER_ID }}
      TOKEN_TYPE: ${{ secrets.TOKEN_TYPE }}
      USER_ID: ${{ secrets.USER_ID }}
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: set_python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: install_dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: build docker image
      run:
        docker build -t airflow_e_commerce_sales:v001 .

    - name: create network
      run:
        docker-compose up -d

    - name: Run tests
      run: |
        pytest --cov=./ --cov-report=xml
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
